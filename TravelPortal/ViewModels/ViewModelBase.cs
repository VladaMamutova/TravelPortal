using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Runtime.CompilerServices;
using TravelPortal.Annotations;
using TravelPortal.DataAccessLayer;

namespace TravelPortal.ViewModels
{
    public class ViewModelBase : INotifyPropertyChanged
    {
        // Классы, представляюшие аргументы для событий.
        public class DialogDisplayEventArgs : EventArgs
        {
            public ITableEntry Record { get; set; }
        }

        public class MessageBoxDisplayEventArgs : EventArgs
        {
            public string Title { get; set; }
            public string Text { get; set; }
        }

        public class DataGridAutoGeneratedColumnsEventArgs : EventArgs
        {
            public IList<string> Headers { get; set; }
        }

        public class CollectionChangedEventArgs : EventArgs
        {
            public ObservableCollection<object> Collection { get; set; }
        }

        // Делегаты для обработки событий.
        public event EventHandler<DialogDisplayEventArgs>
            DialogDisplayRequested;
        public event EventHandler<MessageBoxDisplayEventArgs>
            MessageBoxDisplayRequested;
        public event EventHandler<DataGridAutoGeneratedColumnsEventArgs>
            AutoGeneratedColumns;
        public event EventHandler<CollectionChangedEventArgs>
            CollectionChanged;

        // Методы, выполняющиеся в событиях.
        protected void OnDialogDisplayRequest(ITableEntry record)
        {
            DialogDisplayRequested?.Invoke(
                this,
                new DialogDisplayEventArgs { Record = record });
        }

        protected void OnMessageBoxDisplayRequest(string title, string text)
        {
            MessageBoxDisplayRequested?.Invoke(
                this,
                new MessageBoxDisplayEventArgs
                {
                    Title = title,
                    Text = text
                });
        }

        protected void OnAutoGeneratedColumns(IList<string> headers)
        {
            AutoGeneratedColumns?.Invoke(
                this,
                new DataGridAutoGeneratedColumnsEventArgs { Headers = headers });
        }


        protected void OnCollectionChanged(ObservableCollection<object> collection)
        {
            CollectionChanged?.Invoke(
                this,
                new CollectionChangedEventArgs { Collection = collection });
        }

        public event PropertyChangedEventHandler PropertyChanged;

        [NotifyPropertyChangedInvocator]
        protected virtual void OnPropertyChanged(
            [CallerMemberName] string propertyName = null)
        {
            PropertyChanged?.Invoke(this,
                new PropertyChangedEventArgs(propertyName));
        }
    }
}